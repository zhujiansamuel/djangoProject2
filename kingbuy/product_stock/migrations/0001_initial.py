# Generated by Django 4.1.3 on 2022-11-08 12:20

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import kingbuy.core.utils.json_serializer


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_person_name', models.CharField(blank=True, max_length=256, null=True)),
                ('first_name', models.CharField(blank=True, max_length=256, null=True)),
                ('last_name', models.CharField(blank=True, max_length=256, null=True)),
                ('company_name', models.CharField(blank=True, max_length=256, null=True)),
                ('street_address_1', models.CharField(blank=True, max_length=256, null=True)),
                ('street_address_2', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=256, null=True)),
                ('city_area', models.CharField(blank=True, max_length=128, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', django_countries.fields.CountryField(default='JP', max_length=2)),
                ('country_area', models.CharField(blank=True, max_length=128, null=True)),
                ('phone', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='BarterManage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=36, unique=True)),
                ('management_numbers', models.CharField(default='bc64dc3b-5f5f-11ed-8b09-04ed33bf323a', max_length=255, unique=True)),
                ('confirm_file_id', models.CharField(blank=True, max_length=16)),
                ('slip_number', models.CharField(blank=True, max_length=16)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_change', models.DateTimeField(auto_now=True)),
                ('barter_status', models.CharField(choices=[('下書き', '下書き'), ('保留', '保留'), ('未執行', '未執行'), ('一部執行済', '一部執行済'), ('執行済', '執行済'), ('取消', '取消')], default='下書き', max_length=32)),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('note', models.TextField(blank=True, default='')),
                ('total_MOVEIN_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('total_MOVEOUT_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('barter_manage_permissions', '物々交換迁入迁出管理'), ('barter_cancel_permissions', '物々交換迁入迁出取り消し')),
            },
        ),
        migrations.CreateModel(
            name='BarterManageFulfillment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('fulfillment_order', models.PositiveIntegerField(editable=False)),
                ('status', models.CharField(choices=[('執行', '執行'), ('取消', '取消')], default='執行', max_length=32)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('barter_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='fulfillments', to='product_stock.bartermanage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='E_mark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'permissions': (('manage_E_mark', '取引先(サイト)管理'),),
            },
        ),
        migrations.CreateModel(
            name='ExtraInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'permissions': (('manage_extrainformation', '商品追加情報管理'),),
            },
        ),
        migrations.CreateModel(
            name='LegalPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('company_name', models.CharField(blank=True, max_length=256)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=128, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('fax', models.CharField(blank=True, max_length=256)),
                ('homepage', models.CharField(blank=True, max_length=256)),
                ('address', models.ManyToManyField(blank=True, related_name='legalpersons_addresses', to='product_stock.address')),
            ],
            options={
                'permissions': (('manage_legalperson', '取引先(法人)管理'),),
            },
        ),
        migrations.CreateModel(
            name='ManualInventoryManage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=36, unique=True)),
                ('management_numbers', models.CharField(default='bc621c75-5f5f-11ed-9f5f-04ed33bf323a', max_length=255, unique=True)),
                ('confirm_file_id', models.CharField(blank=True, max_length=16)),
                ('slip_number', models.CharField(blank=True, max_length=16)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_change', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('manual_inventory_status', models.CharField(choices=[('下書き', '下書き'), ('保留', '保留'), ('未執行', '未執行'), ('一部執行済', '一部執行済'), ('執行済', '執行済'), ('取消', '取消')], default='下書き', max_length=32)),
                ('funds_status', models.CharField(choices=[('未入金', '未入金'), ('入金済', '入金済'), ('入金予定', '入金予定'), ('未出金', '未出金'), ('出金済', '出金済'), ('出金予定', '出金予定'), ('取消', '取消'), ('その他', 'その他'), ('未定', '未定')], default='未定', max_length=32)),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('note', models.TextField(blank=True, default='')),
                ('total_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('e_market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manual_inventory_manage_e_market', to='product_stock.e_mark')),
                ('legal_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manual_inventory_manage_suppliers', to='product_stock.legalperson')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ManualInventoryManage_responsible_person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('manual_inventory_manage_permissions', 'マニュアル入庫出庫管理'), ('manual_inventory_cancel_permissions', 'マニュアル入庫出庫取り消し')),
            },
        ),
        migrations.CreateModel(
            name='ManualInventoryManageFulfillment_LOCK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('fulfillment_order', models.PositiveIntegerField(editable=False)),
                ('status', models.CharField(choices=[('執行', '執行'), ('取消', '取消')], default='執行', max_length=32)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('manual_inventory_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='fulfillments_LOCK', to='product_stock.manualinventorymanage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManualInventoryManageFulfillment_UNLOCK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('fulfillment_order', models.PositiveIntegerField(editable=False)),
                ('status', models.CharField(choices=[('執行', '執行'), ('取消', '取消')], default='執行', max_length=32)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('manual_inventory_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='fulfillments_UNLOCK', to='product_stock.manualinventorymanage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderManage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_No', models.PositiveSmallIntegerField(blank=True, default=2, null=True)),
                ('token', models.CharField(blank=True, max_length=36, unique=True)),
                ('management_numbers', models.CharField(default='bc64dc3c-5f5f-11ed-a191-04ed33bf323a', max_length=255)),
                ('confirm_file_id', models.CharField(blank=True, max_length=16)),
                ('slip_number', models.CharField(blank=True, max_length=16)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_change', models.DateTimeField(auto_now=True)),
                ('order_status', models.CharField(choices=[('下書き', '下書き'), ('保留', '保留'), ('未執行', '未執行'), ('一部執行済', '一部執行済'), ('執行済', '執行済'), ('取消', '取消')], default='下書き', max_length=32)),
                ('funds_status', models.CharField(choices=[('未入金', '未入金'), ('入金済', '入金済'), ('入金予定', '入金予定'), ('未出金', '未出金'), ('出金済', '出金済'), ('出金予定', '出金予定'), ('取消', '取消'), ('その他', 'その他'), ('未定', '未定')], default='未定', max_length=32)),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('note', models.TextField(blank=True, default='')),
                ('total_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('total_gross_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('legal_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_manage_legal_person', to='product_stock.legalperson')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_manage_responsible_person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('order_manage_permissions', '注文入庫出庫管理'), ('order_cancel_permissions', '注文入庫出庫取り消し')),
            },
        ),
        migrations.CreateModel(
            name='OrderManageFulfillment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('fulfillment_order', models.PositiveIntegerField(editable=False)),
                ('status', models.CharField(choices=[('執行', '執行'), ('取消', '取消')], default='執行', max_length=32)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('order_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='fulfillments', to='product_stock.ordermanage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductObjectStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=128, null=True)),
                ('sku', models.CharField(default='0a3afefe-5540-43a8-9fd2-a1a4a7245c69-bc60a61d-5f5f-11ed-99de-04ed33bf323a', max_length=255)),
                ('imei_code', models.CharField(blank=True, max_length=128)),
                ('create', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('last_change', models.DateTimeField(auto_now=True, null=True)),
                ('notion', models.CharField(blank=True, max_length=128, null=True)),
                ('price_average_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True)),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('price_override_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True)),
                ('manage_status', models.CharField(blank=True, choices=[('ロック予定', 'ロック予定'), ('ロック済', 'ロック済'), ('注文入庫予定', '注文入庫予定'), ('注文入庫済', '注文入庫済'), ('転移迁出予定', '転移迁出予定'), ('転移迁出済', '転移迁出済'), ('転移迁入予定', '転移迁入予定'), ('転移迁入済', '転移迁入済'), ('ロック解除済', 'ロック解除済'), ('注文出庫予定', '注文出庫予定'), ('注文出庫済', '注文出庫済'), ('物々交換迁出予定', '物々交換迁出予定'), ('物々交換迁出済', '物々交換迁出済'), ('物々交換迁入予定', '物々交換迁入予定'), ('物々交換迁入済', '物々交換迁入済'), ('その他', 'その他'), ('商品情報変更', '商品情報変更')], default='その他', max_length=32, null=True)),
                ('is_select', models.BooleanField(default=False)),
                ('is_allocate', models.BooleanField(default=False)),
                ('is_lock', models.BooleanField(default=False)),
                ('is_available_M', models.BooleanField(default=True)),
                ('is_temp', models.BooleanField(default=True)),
                ('is_out_of_stock', models.BooleanField(default=False)),
                ('extra_informations', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_information', to='product_stock.extrainformation')),
            ],
            options={
                'ordering': ('id',),
                'permissions': (('manage_product_object_stock', '商品在庫管理'), ('change_product_object_stock', '商品在庫編集')),
            },
        ),
        migrations.CreateModel(
            name='ProductStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('jan_code', models.CharField(blank=True, max_length=128, null=True)),
                ('last_change', models.DateTimeField(auto_now=True, null=True)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('price_average_amount', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=12, null=True)),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('quantity_temp', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_all', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_no_imei', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_available', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_available_no_imei', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_locking', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_locking_no_imei', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_allocated', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_allocated_no_imei', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_predestinate', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_predestinate_no_imei', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_out_of_stock', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_out_of_stock_no_imei', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('is_temp', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('name',),
                'permissions': (('manage_product_stock', '商品類管理'), ('change_product_stock', '商品類編集')),
            },
        ),
        migrations.CreateModel(
            name='ProductStockStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'permissions': (('manage_product_stock_status', '商品状態管理'),),
            },
        ),
        migrations.CreateModel(
            name='Shops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('addresses', models.ManyToManyField(blank=True, related_name='shops_addresses', to='product_stock.address')),
            ],
            options={
                'permissions': (('manage_shopss', '店舗別管理'),),
            },
        ),
        migrations.CreateModel(
            name='StoreToStoreManage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=36, unique=True)),
                ('management_numbers', models.CharField(default='bc638044-5f5f-11ed-a50c-04ed33bf323a', max_length=255, unique=True)),
                ('confirm_file_id', models.CharField(blank=True, max_length=16)),
                ('slip_number', models.CharField(blank=True, max_length=16)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_change', models.DateTimeField(auto_now=True)),
                ('store_to_store_status', models.CharField(choices=[('下書き', '下書き'), ('保留', '保留'), ('未執行', '未執行'), ('一部執行済', '一部執行済'), ('執行済', '執行済'), ('取消', '取消')], default='下書き', max_length=32)),
                ('funds_status', models.CharField(choices=[('未入金', '未入金'), ('入金済', '入金済'), ('入金予定', '入金予定'), ('未出金', '未出金'), ('出金済', '出金済'), ('出金予定', '出金予定'), ('取消', '取消'), ('その他', 'その他'), ('未定', '未定')], default='未定', max_length=32)),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('note', models.TextField(blank=True, default='')),
                ('from_shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_shop', to='product_stock.shops')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StoreToStoreManage_responsible_person', to=settings.AUTH_USER_MODEL)),
                ('to_shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to_shop', to='product_stock.shops')),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('store_to_store_manage_permissions', '店間転移迁入迁出管理'), ('store_to_store_cancel_permissions', '店間転移迁入迁出取り消し')),
            },
        ),
        migrations.CreateModel(
            name='StoreToStoreManageFulfillment_MOVEIN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('fulfillment_order', models.PositiveIntegerField(editable=False)),
                ('status', models.CharField(choices=[('執行', '執行'), ('取消', '取消')], default='執行', max_length=32)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('store_to_store_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='fulfillments_in', to='product_stock.storetostoremanage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StoreToStoreManageFulfillment_MOVEOUT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('fulfillment_order', models.PositiveIntegerField(editable=False)),
                ('status', models.CharField(choices=[('執行', '執行'), ('取消', '取消')], default='執行', max_length=32)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('store_to_store_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='fulfillments_out', to='product_stock.storetostoremanage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('meta', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=256)),
                ('last_name', models.CharField(blank=True, max_length=256)),
                ('phone', models.CharField(blank=True, max_length=128, null=True)),
                ('first_name_kannji', models.CharField(blank=True, max_length=256, null=True)),
                ('last_name_kannji', models.CharField(blank=True, max_length=256, null=True)),
                ('age', models.CharField(blank=True, max_length=6, null=True)),
                ('gender', models.CharField(blank=True, max_length=256, null=True)),
                ('birth', models.DateField(blank=True, null=True)),
                ('work', models.CharField(blank=True, max_length=256, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('address', models.ManyToManyField(blank=True, related_name='suppliers_addresses', to='product_stock.address')),
            ],
            options={
                'permissions': (('manage_suppliers', '取引先(個人)管理'),),
            },
        ),
        migrations.CreateModel(
            name='StoreToStoreManageLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_to_store_type', models.CharField(choices=[('転移迁入', '転移迁入'), ('転移迁出', '転移迁出'), ('その他', 'その他')], default='その他', max_length=32)),
                ('store_to_store_status', models.CharField(choices=[('転移迁出予定', '転移迁出予定'), ('転移迁出済', '転移迁出済'), ('転移迁入予定', '転移迁入予定'), ('転移迁入済', '転移迁入済'), ('その他', 'その他')], default='その他', max_length=32)),
                ('product_stock_name', models.CharField(max_length=386)),
                ('product_stock_jan_code', models.CharField(max_length=386)),
                ('product_object_stock_name', models.CharField(blank=True, default='', max_length=255)),
                ('product_object_stock_sku', models.CharField(blank=True, default='', max_length=255)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity_fulfilled_MOVEOUT', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_fulfilled_MOVEIN', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('unit_price_amount', models.DecimalField(decimal_places=0, max_digits=12)),
                ('line_price_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('product_object_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='store_to_store_manage_lines_product_object_stock', to='product_stock.productobjectstock')),
                ('product_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='store_to_store_manage_lines_product_stock', to='product_stock.productstock')),
                ('store_to_store_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='store_to_store_manage_lines', to='product_stock.storetostoremanage')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='StoreToStoreManageFulfillmentLine_MOVEOUT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('fulfillment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='product_stock.storetostoremanagefulfillment_moveout')),
                ('store_to_store_manage_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='product_stock.storetostoremanageline')),
            ],
        ),
        migrations.CreateModel(
            name='StoreToStoreManageFulfillmentLine_MOVEIN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('fulfillment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='product_stock.storetostoremanagefulfillment_movein')),
                ('store_to_store_manage_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='product_stock.storetostoremanageline')),
            ],
        ),
        migrations.CreateModel(
            name='StoreToStoreManageEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('type', models.CharField(choices=[('DRAFT_CREATED', 'draft_created'), ('DRAFT_ADDED_PRODUCTS_STOCK', 'draft_added_products_stock'), ('DRAFT_REMOVED_PRODUCTS_STOCK', 'draft_removed_products_stock'), ('PLACED_FROM_DRAFT', 'placed_from_draft'), ('SLIP_NUMBER_ADDED', 'slip_number_added'), ('SLIP_NUMBER_CHANGED', 'slip_number_changed'), ('CASH_RECEIPTED', 'cash_receipted'), ('CASH_RECEIPTING', 'cash_receipting'), ('CASH_RECEIPT_CANCELED', 'cash_receipt_canceled'), ('CASH_RECEIPT_REFUNDED', 'cash_receipt_refunded'), ('CASH_DISBURSED', 'cash_disbursed'), ('CASH_DISBURSING', 'cash_disbursing'), ('CASH_DISBURSE_CANCELED', 'cash_disburse_canceled'), ('CASH_DISBURSE_REFUNDED', 'cash_disburse_refunded'), ('FULFILLMENT_CANCELED', 'fulfillment_canceled'), ('FULFILLMENT_RESTOCKED_ITEMS', 'fulfillment_restocked_items'), ('FULFILLMENT_FULFILLED_ITEMS', 'fulfillment_fulfilled_items'), ('EMAIL_SENT', 'email_sent'), ('NOTE_ADDED', 'note_added'), ('CANCELED', 'canceled'), ('OTHER', 'other'), ('SUPPLIER_ADDED', 'supplier_added'), ('LEGALPERSON_ADDED', 'legalperson_added'), ('TO_SHOP_ADDED', 'to_shop_added')], max_length=255)),
                ('parameters', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder)),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('store_to_store_manage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='product_stock.storetostoremanage')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='ProductStockEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('type', models.CharField(choices=[('ロック予定', 'ロック予定'), ('ロック済', 'ロック済'), ('注文入庫予定', '注文入庫予定'), ('注文入庫済', '注文入庫済'), ('転移迁出予定', '転移迁出予定'), ('転移迁出済', '転移迁出済'), ('転移迁入予定', '転移迁入予定'), ('転移迁入済', '転移迁入済'), ('ロック解除済', 'ロック解除済'), ('注文出庫予定', '注文出庫予定'), ('注文出庫済', '注文出庫済'), ('物々交換迁出予定', '物々交換迁出予定'), ('物々交換迁出済', '物々交換迁出済'), ('物々交換迁入予定', '物々交換迁入予定'), ('物々交換迁入済', '物々交換迁入済'), ('その他', 'その他'), ('商品情報変更', '商品情報変更')], max_length=255)),
                ('product_object_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productobjectstockevent', to='product_stock.productobjectstock')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='ProductStockChangeEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_field', models.CharField(blank=True, max_length=128, null=True)),
                ('changed_value', models.CharField(blank=True, max_length=128, null=True)),
                ('old_value', models.CharField(blank=True, max_length=128, null=True)),
                ('change_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('product_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_change', to='product_stock.productstock')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProductStockChangeEvent_responsible_person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('change_date',),
                'permissions': (('manage_product_stock_change', '商品類編集歴史を訪問'),),
            },
        ),
        migrations.CreateModel(
            name='ProductObjectStockChangeEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_field', models.CharField(blank=True, max_length=128, null=True)),
                ('changed_value', models.CharField(blank=True, max_length=128, null=True)),
                ('old_value', models.CharField(blank=True, max_length=128, null=True)),
                ('current_value', models.CharField(blank=True, max_length=128, null=True)),
                ('change_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('product_object_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_object_stock_change', to='product_stock.productobjectstock')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProductObjectStockChangeEvent_responsible_person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('change_date',),
                'permissions': (('manage_product_object_stock_change', '商品情報編集歴史を訪問'),),
            },
        ),
        migrations.AddField(
            model_name='productobjectstock',
            name='product_stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_object_stock', to='product_stock.productstock'),
        ),
        migrations.AddField(
            model_name='productobjectstock',
            name='shops',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shops', to='product_stock.shops'),
        ),
        migrations.AddField(
            model_name='productobjectstock',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='productstockstatus', to='product_stock.productstockstatus'),
        ),
        migrations.CreateModel(
            name='OrderManageLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_manage_type', models.CharField(choices=[('注文入庫', '注文入庫'), ('注文出庫', '注文出庫'), ('その他', 'その他')], default='その他', max_length=32)),
                ('order_manage_status', models.CharField(choices=[('注文入庫予定', '注文入庫予定'), ('注文入庫済', '注文入庫済'), ('注文出庫予定', '注文出庫予定'), ('注文出庫済', '注文出庫済'), ('その他', 'その他')], default='その他', max_length=32)),
                ('product_stock_name', models.CharField(max_length=386)),
                ('product_stock_jan_code', models.CharField(max_length=386)),
                ('product_object_stock_name', models.CharField(blank=True, default='', max_length=255)),
                ('product_object_stock_sku', models.CharField(blank=True, default='', max_length=255)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity_fulfilled', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('unit_price_amount', models.DecimalField(decimal_places=0, max_digits=12)),
                ('line_price_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('order_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='order_manage_lines', to='product_stock.ordermanage')),
                ('product_object_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_manage_lines_product_object_stock', to='product_stock.productobjectstock')),
                ('product_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_manage_lines_product_stock', to='product_stock.productstock')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='OrderManageFulfillmentLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('fulfillment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='product_stock.ordermanagefulfillment')),
                ('order_manage_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='product_stock.ordermanageline')),
            ],
        ),
        migrations.CreateModel(
            name='OrderManageEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('type', models.CharField(choices=[('DRAFT_CREATED', 'draft_created'), ('DRAFT_ADDED_PRODUCTS_STOCK', 'draft_added_products_stock'), ('DRAFT_REMOVED_PRODUCTS_STOCK', 'draft_removed_products_stock'), ('PLACED_FROM_DRAFT', 'placed_from_draft'), ('SLIP_NUMBER_ADDED', 'slip_number_added'), ('SLIP_NUMBER_CHANGED', 'slip_number_changed'), ('CASH_RECEIPTED', 'cash_receipted'), ('CASH_RECEIPTING', 'cash_receipting'), ('CASH_RECEIPT_CANCELED', 'cash_receipt_canceled'), ('CASH_RECEIPT_REFUNDED', 'cash_receipt_refunded'), ('CASH_DISBURSED', 'cash_disbursed'), ('CASH_DISBURSING', 'cash_disbursing'), ('CASH_DISBURSE_CANCELED', 'cash_disburse_canceled'), ('CASH_DISBURSE_REFUNDED', 'cash_disburse_refunded'), ('FULFILLMENT_CANCELED', 'fulfillment_canceled'), ('FULFILLMENT_RESTOCKED_ITEMS', 'fulfillment_restocked_items'), ('FULFILLMENT_FULFILLED_ITEMS', 'fulfillment_fulfilled_items'), ('EMAIL_SENT', 'email_sent'), ('NOTE_ADDED', 'note_added'), ('CANCELED', 'canceled'), ('OTHER', 'other'), ('SUPPLIER_ADDED', 'supplier_added'), ('LEGALPERSON_ADDED', 'legalperson_added'), ('TO_SHOP_ADDED', 'to_shop_added')], max_length=255)),
                ('parameters', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder)),
                ('order_manage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='product_stock.ordermanage')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.AddField(
            model_name='ordermanage',
            name='suppliers',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_manage_suppliers', to='product_stock.suppliers'),
        ),
        migrations.CreateModel(
            name='ManualInventoryManageLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manual_inventory_type', models.CharField(choices=[('ロック', 'ロック'), ('ロック解除', 'ロック解除'), ('その他', 'その他')], default='その他', max_length=32)),
                ('manual_inventory_status', models.CharField(choices=[('ロック予定', 'ロック予定'), ('ロック済', 'ロック済'), ('ロック解除済', 'ロック解除済'), ('その他', 'その他')], default='その他', max_length=32)),
                ('product_stock_name', models.CharField(max_length=386)),
                ('product_stock_jan_code', models.CharField(max_length=386)),
                ('product_object_stock_name', models.CharField(blank=True, default='', max_length=255)),
                ('product_object_stock_sku', models.CharField(blank=True, default='', max_length=255)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity_fulfilled_LOCK', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_fulfilled_UNLOCK', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('unit_price_amount', models.DecimalField(decimal_places=0, max_digits=12)),
                ('line_price_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('manual_inventory_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='manual_inventory_manage_lines', to='product_stock.manualinventorymanage')),
                ('product_object_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manual_inventory_manage_lines_product_object_stock', to='product_stock.productobjectstock')),
                ('product_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manual_inventory_manage_lines_product_stock', to='product_stock.productstock')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='ManualInventoryManageFulfillmentLine_UNLOCK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('fulfillment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='product_stock.manualinventorymanagefulfillment_unlock')),
                ('manual_inventory_manage_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='product_stock.manualinventorymanageline')),
            ],
        ),
        migrations.CreateModel(
            name='ManualInventoryManageFulfillmentLine_LOCK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('fulfillment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='product_stock.manualinventorymanagefulfillment_lock')),
                ('manual_inventory_manage_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='product_stock.manualinventorymanageline')),
            ],
        ),
        migrations.CreateModel(
            name='ManualInventoryManageEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('type', models.CharField(choices=[('DRAFT_CREATED', 'draft_created'), ('DRAFT_ADDED_PRODUCTS_STOCK', 'draft_added_products_stock'), ('DRAFT_REMOVED_PRODUCTS_STOCK', 'draft_removed_products_stock'), ('PLACED_FROM_DRAFT', 'placed_from_draft'), ('SLIP_NUMBER_ADDED', 'slip_number_added'), ('SLIP_NUMBER_CHANGED', 'slip_number_changed'), ('CASH_RECEIPTED', 'cash_receipted'), ('CASH_RECEIPTING', 'cash_receipting'), ('CASH_RECEIPT_CANCELED', 'cash_receipt_canceled'), ('CASH_RECEIPT_REFUNDED', 'cash_receipt_refunded'), ('CASH_DISBURSED', 'cash_disbursed'), ('CASH_DISBURSING', 'cash_disbursing'), ('CASH_DISBURSE_CANCELED', 'cash_disburse_canceled'), ('CASH_DISBURSE_REFUNDED', 'cash_disburse_refunded'), ('FULFILLMENT_CANCELED', 'fulfillment_canceled'), ('FULFILLMENT_RESTOCKED_ITEMS', 'fulfillment_restocked_items'), ('FULFILLMENT_FULFILLED_ITEMS', 'fulfillment_fulfilled_items'), ('EMAIL_SENT', 'email_sent'), ('NOTE_ADDED', 'note_added'), ('CANCELED', 'canceled'), ('OTHER', 'other'), ('SUPPLIER_ADDED', 'supplier_added'), ('LEGALPERSON_ADDED', 'legalperson_added'), ('TO_SHOP_ADDED', 'to_shop_added')], max_length=255)),
                ('parameters', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder)),
                ('manual_inventory_manage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='product_stock.manualinventorymanage')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.AddField(
            model_name='manualinventorymanage',
            name='suppliers',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manual_inventory_manage_suppliers', to='product_stock.suppliers'),
        ),
        migrations.AddField(
            model_name='legalperson',
            name='deputy',
            field=models.ManyToManyField(blank=True, related_name='legalperson_deputy', to='product_stock.suppliers'),
        ),
        migrations.CreateModel(
            name='BarterManageLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barter_manage_type', models.CharField(choices=[('物々交換迁入', '物々交換迁入'), ('物々交換迁出', '物々交換迁出'), ('その他', 'その他')], default='その他', max_length=32)),
                ('barter_manage_status', models.CharField(choices=[('物々交換迁出予定', '物々交換迁出予定'), ('物々交換迁出済', '物々交換迁出済'), ('物々交換迁入予定', '物々交換迁入予定'), ('物々交換迁入済', '物々交換迁入済'), ('その他r', 'その他')], default='その他r', max_length=32)),
                ('product_stock_name', models.CharField(max_length=386)),
                ('product_stock_jan_code', models.CharField(max_length=386)),
                ('product_object_stock_name', models.CharField(blank=True, default='', max_length=255)),
                ('product_object_stock_sku', models.CharField(blank=True, default='', max_length=255)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity_fulfilled', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('unit_price_amount', models.DecimalField(decimal_places=0, max_digits=12)),
                ('line_price_amount', models.DecimalField(decimal_places=0, default=0, max_digits=12)),
                ('barter_manage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='barter_manage_lines', to='product_stock.bartermanage')),
                ('product_object_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='barter_manage_lines_product_object_stock', to='product_stock.productobjectstock')),
                ('product_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='barter_manage_lines_product_stock', to='product_stock.productstock')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='BarterManageFulfillmentLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('barter_manage_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='product_stock.bartermanageline')),
                ('fulfillment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='product_stock.bartermanagefulfillment')),
            ],
        ),
        migrations.CreateModel(
            name='BarterManageEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('type', models.CharField(choices=[('DRAFT_CREATED', 'draft_created'), ('DRAFT_ADDED_PRODUCTS_STOCK', 'draft_added_products_stock'), ('DRAFT_REMOVED_PRODUCTS_STOCK', 'draft_removed_products_stock'), ('PLACED_FROM_DRAFT', 'placed_from_draft'), ('SLIP_NUMBER_ADDED', 'slip_number_added'), ('SLIP_NUMBER_CHANGED', 'slip_number_changed'), ('CASH_RECEIPTED', 'cash_receipted'), ('CASH_RECEIPTING', 'cash_receipting'), ('CASH_RECEIPT_CANCELED', 'cash_receipt_canceled'), ('CASH_RECEIPT_REFUNDED', 'cash_receipt_refunded'), ('CASH_DISBURSED', 'cash_disbursed'), ('CASH_DISBURSING', 'cash_disbursing'), ('CASH_DISBURSE_CANCELED', 'cash_disburse_canceled'), ('CASH_DISBURSE_REFUNDED', 'cash_disburse_refunded'), ('FULFILLMENT_CANCELED', 'fulfillment_canceled'), ('FULFILLMENT_RESTOCKED_ITEMS', 'fulfillment_restocked_items'), ('FULFILLMENT_FULFILLED_ITEMS', 'fulfillment_fulfilled_items'), ('EMAIL_SENT', 'email_sent'), ('NOTE_ADDED', 'note_added'), ('CANCELED', 'canceled'), ('OTHER', 'other'), ('SUPPLIER_ADDED', 'supplier_added'), ('LEGALPERSON_ADDED', 'legalperson_added'), ('TO_SHOP_ADDED', 'to_shop_added')], max_length=255)),
                ('parameters', models.JSONField(blank=True, default=dict, encoder=kingbuy.core.utils.json_serializer.CustomJsonEncoder)),
                ('barter_manage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='product_stock.bartermanage')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.AddField(
            model_name='bartermanage',
            name='legal_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='barter_manage_suppliers', to='product_stock.legalperson'),
        ),
        migrations.AddField(
            model_name='bartermanage',
            name='responsible_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='barter_manage_responsible_person', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bartermanage',
            name='suppliers',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='barter_manage_suppliers', to='product_stock.suppliers'),
        ),
    ]
